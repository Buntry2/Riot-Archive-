<%= erb :header %>
<head>
   <script type="text/javascript">
       window.onload = function () {
            var games = <%= @games.to_json %>
            var table = document.getElementById('game_list');
            
            //creates a keymap for commands
            var keymap = [];
            
            var game_index_position = $("#game_index").position();
            
            //Creates all the invisible rows
            games.forEach( function(game, i) {
               
               //Creates a row with class game_object
               var row = document.createElement("tr");
               row.classList.add("game_object");
               
               //Adds a win or loss class to the row
               if (game.outcome) { row.classList.add("win"); }
               else { row.classList.add("loss"); }
               
               var date = document.createElement("td");
               date.classList.add("date");
               date.appendChild( document.createTextNode(game.date) );
               row.appendChild(date);
               
               var outcome = document.createElement("td");
               outcome.classList.add("outcome");
               outcome.appendChild( (game.outcome) ? document.createTextNode("Win") : document.createTextNode("Loss") );
               row.appendChild(outcome);
               
               var champion = document.createElement("td");
               champion.classList.add("champion");
               champion.appendChild( document.createTextNode(game.champion) );
               row.appendChild(champion);
               
               var kills = document.createElement("td");
               kills.classList.add("kills");
               kills.appendChild( document.createTextNode(game.kills) );
               row.appendChild(kills);
               
               var deaths = document.createElement("td");
               deaths.classList.add("deaths");
               deaths.appendChild( document.createTextNode(game.deaths) );
               row.appendChild(deaths);
               
               var assists = document.createElement("td");
               assists.classList.add("assists");
               assists.appendChild( document.createTextNode(game.assists) );
               row.appendChild(assists);
               
               var kda = document.createElement("td");
               kda.classList.add("kda");
               kda.appendChild( document.createTextNode( +game.kda.toFixed(3)) );
               row.appendChild(kda);
               
               var cs = document.createElement("td");
               cs.classList.add("cs");
               cs.appendChild ( document.createTextNode(game.cs) );
               row.appendChild(cs);
               
               var ge = document.createElement("td");
               ge.classList.add("ge");
               ge.appendChild( document.createTextNode(game.ge) );
               row.appendChild(ge);
               
               var dg = document.createElement("td");
               dg.classList.add("dg");
               dg.appendChild( document.createTextNode(game.dg) );
               row.appendChild(dg);
               
               var dpg = document.createElement("td");
               dpg.classList.add("dpg");
               dpg.appendChild( document.createTextNode( +game.dpg.toFixed(3)) );
               row.appendChild(dpg);
               
               //hides row and adds it to table
               $(row).hide();
               table.appendChild(row);
           });
           
            $(".game_object").slice(0, 19).show();
            $("#load").click(function(e){ 
                e.preventDefault();
                $(".game_object:hidden").slice(0, 19).show(); 
                if($(".game_object:hidden").length == 0){ 
                    $('#load').hide();
                }
            });
            
            //Get Slider info
            var getSlider = function(){
                return $("#rg_slider").slider("value");
            }
            
            var rgValue = function(x){
                var tkills = 0;
                var tdeaths = 0;
                var tassists = 0;
                var twins = 0;
                var tlosses = 0;
                
                games.slice(0, x).forEach( function(game){
                    tkills += game.kills;
                    tdeaths += game.deaths;
                    tassists += game.assists;
                    
                    if(game.outcome){
                        twins += 1;
                    } else {
                        tlosses += 1;
                    }
                });
                var tgames = twins + tlosses;
                
                var kda;
                if (tdeaths == 0) {
                    kda = tkills + tassists;
                } else {
                    kda = (tkills + tassists) / tdeaths;
                }
                
                return {
                        wins: twins,
                        losses: tlosses,
                        total: tgames,
                        wlr: twins / tlosses,
                        
                        kills: tkills,
                        akills: tkills / tgames,
                        deaths: tdeaths,
                        adeaths: tdeaths / tgames,
                        assists: tassists,
                        aassists: tassists / tgames,
                        kda: kda
                };
            }
            var kda = rgValue(games.length).kda
            
            //Recent Games Tab
            var updateRG = function(x){
                data = rgValue(x);
                
                $("#average_kda").empty();
                $("#average_kda").append( "<div>" + data.akills.toFixed(2) + " / " + data.adeaths.toFixed(2) + " / " + data.aassists.toFixed(2) + "</div>");
                
                $("#a_kda").empty();
                $("#a_kda").append("<div>" + data.kda.toFixed(2) + " KDA</div>");
                
                $("#kda_poc").empty();
                $("#kda_poc").append("<div>" + (((data.kda - kda)/kda) * 100).toFixed(2) + "%</div>").css("color", function(){
                    if ((data.kda - kda)/kda * 100 > 0) {
                        return "forestgreen";
                    } else {
                        return "darkred";
                    }
                })
                
                $("#wl").empty();
                $("#wl").append("<div>" + "G" + data.total + "   W" + data.wins + "  L" + data.losses + "</div>");
                
                $("#wlr").empty();
                $("#wlr").append("<div>" + data.wlr.toFixed(2) + " W/L" + "</div>");
            }
            
            //ALL SLIDER STUFF
            $("#rg_slider").slider({
                range: "min",
                min: 1,
                max: games.length,
                value: games.length,
                slide: function(event, ui){
                    $("#rg_num").val( ui.value );
                    updateRG(ui.value);
                    console.log("trying to change val");
                }
            });
            $("#rg_num").val( $("#rg_slider").slider("value") );
            updateRG();
            
            //ALL DRAGGABLE STUFF
            $("#game_index").draggable({
                handle: "#game_header",
                scroll: true,
                scrollSpeed: 10,
                scrollSensitivity: 100
            })
            
            $("#recent_game_stats").draggable({
                handle: "#summoner_handle",
                scroll: true,
                scrollSpeed: 10,
                scrollSensitivity: 100
            });
            
            
            //Makes each game object draggable
            $("#game_list tr:not(:first)").draggable({
                helper: "clone",
                revert: "valid",
                cursor: "move",
                cursorAt: {top: 25, left: 270},
                scroll: true,
                scrollSpeed: 5,
                scrollSensitivity: 100
            });
            
            //Reset position of shit
            var reset = function(e){
                $("#game_index").animate({
                    left: game_index_position.left,
                    top: game_index_position.top - 69
                }, "slow");
                $(".game_object").hide().slice(0, 19).show();
                $("#load").show();
                
                $("#recent_game_stats").animate({
                    left: game_index_position.left,
                    top: game_index_position.top - 69
                }, "slow");
            }
            
            //Resets if reset button on top is pressed
            $("#reset").click(reset);
            
            //Another resetter (This time using CTRL + R) 17 && 82
            onkeydown = onkeyup = function(e){
                e = e || event; //deals with Internet Explorer
                keymap[e.keyCode] = e.type == "keydown"
                
                //If r is pressed
                if (keymap[82]){
                    reset();
                }
            };
        }
   </script> 
</head>
<div id="page_content">
    <div id="game_index">
        <div id="game_list_div">
            <table id="game_list">
                <tbody>
                    <tr id="game_header">
                        <th>Date</th>
                        <th>Outcome</th>
                        <th>Champion</th>
                        <th>Kills</th>
                        <th>Deaths</th>
                        <th>Assists</th>
                        <th>KDA</th>
                        <th>Creep Score</th>
                        <th>Gold Earned</th>
                        <th>Damage Given</th>
                        <th>Damage per Gold</th>
                    </tr>
                </tbody>
            </table>
        </div>
        <button id="load" type="button">Load More</button>
    </div>
    <div id="game_calculations">
        <%= erb :'games/calculations' %>
    </div>
</div>

